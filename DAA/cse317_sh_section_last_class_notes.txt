Reduction 

A <=_P B 
it means we can solve A in terms of B

NP-completeness

We say a problem X is NP-complete if and only if 
1. X is in NP
2. For all problems X' in NP X' <=_P X 

In order to prove some new problem NP-complete new need to show that is NP as well as other problems in NP reduce to it.

Cook's theorem: That SAT problem is NP-complete 

SAT problem is the satisfiability problem

Suppose we have a boolean formula A which evaluates to either 
true (1) or false (0)

we have several variables in A x_1, x_2, x_3, ... x_n
we may also have x_1', x_2', ... 

x_1 = 1 then x_1' = 0
x_1 = 0 then x_1' = 1

such that these variables are connected with and, or operators 

Clause 1                 Clause 2
(x_1 or x_2 or x_3') and (x_2 or x_3' or x_5') and (x_1' or x_6' or x7 or x8) ... 


conjunctive normal form 


Now we know one problem which is NP-complete 



Because of transitivity of reduction 

A <= B and B <= C then A <= C

We know SAT is NP-complete 
1. SAT is in NP. check
2. For all problems X' in NP. X' <=_P SAT. check 

if I can reduce the following

X

SAT <=_P X which means by the transitivity we know that every problem in NP must also reduce to X


NP-completeness: to show some new problem X to be NP-complete
1. X is in NP
2. Let X' be some NP-complete problem and X' <=_P X



SAT
3-SAT 
CLIQUE 
VERTEXCOVER
SETCOVER
INDEPENDENTSET

Relationship 
VERTEXCOVER and INDEPENDENTSET

Let G = (V, E) be a simple graph
G has an independent set with at least k vertices if and only if G has a vertex cover with at most |V| - k nodes. 


Suppose we have a universal set which we call 
U = {a_1, a_2, a_3, ..., a_n} n >= 1

F = {S_1, S_2, S_3, ... S_m}

Each subset in F is a subset of F with one condition 
S_1 U S_2 U S_3 U ... U S_m = U

Example: U = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
F = {S_1, S_2, S_3, S_4, S_5}

S_1 = {1, 2, 3}, S_2 = {2, 3, 4, 6}, S_3 = {1, 3, 5, 7}
S_4 = {7, 8, 9}, S_5 = {1, 10}

S_1 U S_2 U S_3 U S_4 U S_5 = U


The set cover question is: given (U, F) and a positive integer k. Is it possible to select only k subsets from F such that union of all those subsets is U.



x     Proving problems NP-complete is *** not easy ***
check Proving problems NP is ** not that hard **

G = (V, E). S a subset of V
S = {u_1, u_2, ..., u_k}
How to check if S forms an independent set 

For every pair of vertices (u, v) in S you will check if u and v are connected or not 

Time complexity: O(k^2)
1st iter: k - 1 checks
2nd iter: k - 2 checks 
...
kth iter: 1 check

total checks = 1 + 2 + 3 + ... + k - 1 = k(k-1)/2 = O(k^2)


Every problem in P is also in NP


Given the following SORTING problem. Prove SORTING is in NP.

SORTING: 
Input: Given a set A of n numbers
Question: Are the numbers in A in ascending order?

Solution: 
for i = 1 to n - 1
    if a_i > a_{i+1}
         return no
return yes

time complexity: O(n)















